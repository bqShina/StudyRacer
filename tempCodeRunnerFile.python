from sqlalchemy import create_engine, Column, Integer, String, ForeignKey
from sqlalchemy.orm import relationship, declarative_base, sessionmaker

# Define the base class
Base = declarative_base()

# User table
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    email = Column(String, unique=True, nullable=False)
    name = Column(String, nullable=False)
    password = Column(String, nullable=False)

    # Relationships
    assignments = relationship("Assignment", back_populates="user")

# Assignment table
class Assignment(Base):
    __tablename__ = 'assignments'
    id = Column(Integer, primary_key=True)
    description = Column(String, nullable=False)
    user_id = Column(Integer, ForeignKey('users.id'))  # Foreign key to User

    # Relationships
    user = relationship("User", back_populates="assignments")
    subtasks = relationship("Subtask", back_populates="assignment")

# Subtask table
class Subtask(Base):
    __tablename__ = 'subtasks'
    id = Column(Integer, primary_key=True)
    description = Column(String, nullable=False)
    assignment_id = Column(Integer, ForeignKey('assignments.id'))  # Foreign key to Assignment

    # Relationships
    assignment = relationship("Assignment", back_populates="subtasks")

# Create an SQLite database
engine = create_engine('sqlite:///studyracer_2.db')

# Create all tables
Base.metadata.create_all(engine)

# Create a session to interact with the database
Session = sessionmaker(bind=engine)
session = Session()

# Example: Add a user
new_user = User(email="abhi@gmail.com", name="John Doe", password="123")
session.add(new_user)
session.commit()
